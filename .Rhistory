??create.monomial.basis
#  Create a polygonal basis over the interval [0,1]
#  with break points at 0, 0.1, ..., 0.95, 1
(basisobj <- create.polygonal.basis(seq(0,1,0.1)))
#  plot the basis
plot(basisobj)
#  Create a polygonal basis over the interval [0,1]
#  with break points at 0, 0.1, ..., 0.95, 1
(basisobj <- fda::create.polygonal.basis(seq(0,1,0.1)))
#  plot the basis
plot(basisobj)
x = matrix(rnorm(10*3), ncol=3)
sum(x)
rm(list=ls())
library(T4cluster)
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
clk = gmm(X, k=2)$cluster
critint(X, clk, criteria="gamma")
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
clk = gmm(X, k=2)$cluster
critint(X, clk, criteria="gamma")
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
clk = gmm(X, k=2)$cluster
critint(X, clk, criteria="gamma")
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
clk = gmm(X, k=2)$cluster
critint(X, clk, criteria="gamma")
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
vec_y[i] = critint(X, gmm(X, k=(i+1))$cluster, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
critint(X, cli, criteria="gamma")$'gamma'
label = cli
# PRELIMINARY
K = length(unique(label))
P = base::ncol(X)
N = base::nrow(X)
# COMPUTE : PREREQUISITE
classindex = list()
for (k in 1:K){
classindex[[k]] = which(label==k)
}
distmat = as.matrix(stats::dist(X))
diag(distmat) = Inf
Nw = 0
for (k in 1:K){
Nk = length(classindex[[k]])
Nw = Nw + (Nk*(Nk-1)/2)
}
allid = 1:N
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
for (k in 1:K){
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_count[i,j] <- base::sum(tgt_other < distmat[vec_tgt[i],vec_tgt[j]])
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
for (k in 1:K){
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_count[i,j] <- base::sum((tgt_other < distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
for (k in 1:K){
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_smaller    <- find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
tgt_smaller
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
k=1
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
tgt_other
i=1
j=1
j=2
as.double(distmat[vec_tgt[i],vec_tgt[j]])
vec_tgt[i]
vec_tgt[j]
ntgt
vec_tgt
vec_tgt[2]
j=2
vec_tgt
ntgt
classindex
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
for (k in 1:K){
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
if (length(ntgt) > 1){
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_smaller    <- find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
}
val_den = base::sum(vec_den)
# COMPUTE : NUMERATOR
val_num = Nw*((N*(N-1)/2)-Nw)
val_den/val_num
val_den
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
for (k in 1:K){
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
if (ntgt > 1){
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_smaller    <- find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
}
vec_tgt
k
label
label = as.integer(as.factor(label))
label
# PRELIMINARY
K = length(unique(label))
K
P = base::ncol(X)
N = base::nrow(X)
# COMPUTE : PREREQUISITE
classindex = list()
for (k in 1:K){
classindex[[k]] = which(label==k)
}
classindex
# COMPUTE : PREREQUISITE
classindex = list()
for (k in 1:K){
classindex[[k]] = which(label==k)
}
distmat = as.matrix(stats::dist(X))
diag(distmat) = Inf
Nw = 0
for (k in 1:K){
Nk = length(classindex[[k]])
Nw = Nw + (Nk*(Nk-1)/2)
}
allid = 1:N
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
k=1
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
if (ntgt > 1){
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_smaller    <- find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
vec_den[1]
k=2
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
if (ntgt > 1){
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_smaller    <- find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
k=2
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
ntgt
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
ntgt
i=1
j=2
tgt_smaller    <- find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_other
as.double(distmat[vec_tgt[i],vec_tgt[j]])
utils::find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
distmat = as.matrix(stats::dist(X))
diag(distmat) = 1e+10
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
tgt_smaller    <- utils::find(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_other
as.double(distmat[vec_tgt[i],vec_tgt[j]])
tgt_smaller    <- which(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
# COMPUTE : DENOMINATOR
vec_den = rep(0,K)
for (k in 1:K){
vec_tgt  = classindex[[k]]
vec_else = base::setdiff(allid, vec_tgt)
ntgt     = length(vec_tgt)
if (ntgt > 1){
tgt_count = array(0,c(ntgt,ntgt))
tgt_other = as.vector(distmat[vec_else,vec_else])
for (i in 1:(ntgt-1)){
for (j in (i+1):ntgt){
tgt_smaller    <- which(tgt_other < as.double(distmat[vec_tgt[i],vec_tgt[j]]))
tgt_count[i,j] <- length(tgt_smaller)
tgt_count[j,i] <- tgt_count[i,j]
}
}
vec_den[k] = base::sum(tgt_count)
}
}
val_den = base::sum(vec_den)
# COMPUTE : NUMERATOR
val_num = Nw*((N*(N-1)/2)-Nw)
val_den/val_num
rm(list=ls())
library(T4cluster)
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="gamma")$'gamma'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="dunn")$'dunn'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="dunn")$'dunn'
}
plot(vec_x, vec_y, 'b')
X1 = matrix(rnorm(20*2, mean=-10), ncol=2)
X2 = matrix(rnorm(20*2),           ncol=2)
X3 = matrix(rnorm(20*2, mean=+10), ncol=2)
X  = rbind(X1, X2, X3)
## CLUSTERING WITH DIFFERENT K VALUES
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="dunn")$'dunn'
}
plot(vec_x, vec_y, 'b')
library(T4cluster)
library(T4cluster)
library(T4cluster)
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="db")$'db'
}
plot(vec_x, vec_y, 'b')
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="db")$'db'
}
plot(vec_x, vec_y, 'b')
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="db")$'db'
}
plot(vec_x, vec_y, 'b')
vec_x = 2:11
vec_y = rep(0,10)
for (i in 1:10){
cli      = gmm(X, k=(i+1))$cluster
vec_y[i] = critint(X, cli, criteria="db")$'db'
}
plot(vec_x, vec_y, 'b')
rm(list=ls())
library(T4cluster)
library(T4cluster)
pkgdown::build_home()

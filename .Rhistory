cl3 = gmm(X, k=4)
## GENERATE 150 SAMPLES FROM THE MODEL
Z = gmmsample(150, cl3)
## PCA FOR ORIGINAL AND GENERATED DATA
X2trf = Rdimtools::do.pca(X, ndim=2)
X2ori = X2trf$Y
X2gen = (Z-matrix(rep(colMeans(Z),150),ncol=4,byrow=TRUE))%*%X2trf$projection
## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(X2ori, pch=19, cex=0.8, main="original data")
plot(X2gen, pch=19, cex=0.8, main="generated data")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
## FIT THE MODEL WITH K=3
cl3 = gmm(X, k=4)
## GENERATE 150 SAMPLES FROM THE MODEL
Z = gmmsample(150, cl3)
## PCA FOR ORIGINAL AND GENERATED DATA
X2trf = Rdimtools::do.pca(X, ndim=2)
X2ori = X2trf$Y
X2gen = (Z-matrix(rep(colMeans(Z),150),ncol=4,byrow=TRUE))%*%X2trf$projection
## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(X2ori, pch=19, cex=0.8, main="original data")
plot(X2gen, pch=19, cex=0.8, main="generated data")
par(opar)
library(T4cluster)
Z
cl3
gmmobj = cl3
gmmobj
gmmobj
covariance = gmmobj$variance
covariance
data(iris)
X   = as.matrix(iris[,1:4])
## FIT THE MODELS
models = list()
for (i in 1:4){
models[[i]] = gmm(X, k=(i+1))
}
## COMPUTE SCORES
scores = c()
for (i in 1:4){
scores = rbind(scores, gmmscore(models[[i]]))
}
library(T4cluster)
## COMPUTE SCORES
scores = c()
for (i in 1:4){
scores = rbind(scores, gmmscore(models[[i]]))
}
scores
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(myscore, main="Information Criteria", type="b",
xlab="number of clusters")
legend("topleft", c("(1) AIC","(2) BIC","(3) HQIC"), col=1:3, fill=1:3)
par(opar)
graphics.off()
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters")
legend("topleft", c("(1) AIC","(2) BIC","(3) HQIC"), col=1:3, fill=1:3)
par(opar)
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters")
legend("topleft", c("1. AIC","2. BIC","3. HQIC"), col=1:3, fill=1:3)
par(opar)
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters")
legend("topleft", c("1. AIC","2. BIC","3. HQIC"), col=1:3, fill=1:3)
par(opar)
rownames(scores) = 2:5
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters")
legend("topleft", c("1. AIC","2. BIC","3. HQIC"), col=1:3, fill=1:3)
par(opar)
models = list()
for (i in 1:4){
models[[i]] = gmm(X, k=(i))
}
## FIT THE MODELS
models = list()
for (i in 1:5){
models[[i]] = gmm(X, k=i)
}
## COMPUTE SCORES
scores = c()
for (i in 1:5){
scores = rbind(scores, gmmscore(models[[i]]))
}
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters")
legend("topleft", c("1. AIC","2. BIC","3. HQIC"), col=1:3, fill=1:3)
par(opar)
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters")
legend("bottomleft", c("1. AIC","2. BIC","3. HQIC"), col=1:3, fill=1:3)
par(opar)
hey = gmmscore(models[[1]])
hey
class(hey)
table(hey)
hey
library(T4cluster)
x <- 0:50/50
matplot(x, outer(x, 1:8, function(x, k) sin(k*pi * x)),
ylim = c(-2,2), type = "plobcsSh",
main= "matplot(,type = \"plobcsSh\" )")
## pch & type =  vector of 1-chars :
matplot(x, outer(x, 1:4, function(x, k) sin(k*pi * x)),
pch = letters[1:4], type = c("b","p","o"))
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters", pch=letters[1:3])
legend("bottomleft", c("1. AIC","2. BIC","3. HQIC"), col=1:3, fill=1:3)
par(opar)
## VISUALIZE
opar <- par(no.readonly=TRUE)
matplot(scores, main="Information Criteria", type="b",
xlab="number of clusters", pch=letters[1:3])
legend("bottomleft", c("(a) AIC","(b) BIC","(c) HQIC"), col=1:3, fill=1:3)
par(opar)
models[[1]]
models[[2]]
models[[3]]
models[[4]]
pkgdown::build_site()
library(T4cluster)
library(T4cluster)
library(T4cluster)
library(T4cluster)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## COMPARE WITH STANDARD GMM
cl.gmm = gmm(X, k=3)
cl.11R = gmm11R(X, k=3)
library(T4cluster)
cl.11R = gmm11R(X, k=3)
library(T4cluster)
cl.11R = gmm11R(X, k=3)
cl.11R = gmm11R(X, k=3, usediag=TRUE)
cl.11R
## COMPARE WITH STANDARD GMM
cl.gmm = gmm(X, k=3)$cluster
cl.11Rf = gmm11R(X, k=3)$cluster
cl.11Rd = gmm11R(X, k=3, usediag=TRUE)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3), pty="s")
plot(X2d, col=cl.gmm,  pch=19, main="standard GMM")
plot(X2d, col=cl.11Rf, pch=19, main="gmm11R: full covs")
plot(X2d, col=cl.11Rd, pch=19, main="gmm11R: diagonal covs")
par(opar)
## COMPARE WITH STANDARD GMM
cl.gmm = gmm(X, k=3)$cluster
cl.11Rf = gmm11R(X, k=3)$cluster
cl.11Rd = gmm11R(X, k=3, usediag=TRUE)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,3), pty="s")
plot(X2d, col=cl.gmm,  pch=19, main="standard GMM")
plot(X2d, col=cl.11Rf, pch=19, main="gmm11R: full covs")
plot(X2d, col=cl.11Rd, pch=19, main="gmm11R: diagonal covs")
par(opar)
library(T4cluster)
names(cl.11Rd)
cl.11Rf = gmm11R(X, k=3)
names(cl.11Rf)
library(T4cluster)
library(T4cluster)
library(T4cluster)
pkgdown::build_site()
pkgdown::build_site()
library(T4cluster)
library(T4cluster)
rm(list=ls())
library(T4cluster)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
cl2 = gmm16G(X, k=2)
cl2$loglkd
cl22 = gmm(X, k=2)
cl22$loglkd
library(T4cluster)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
library(T4cluster)
help(gmm16G)
pkgdown::build_site()
library(T4cluster)
# -------------------------------------------------------------
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
## LEARN WITH TESTING DATA FOR K=3
cl3 = gmm(X, k=3)
## PREDICT LABEL FOR THE SAME DATA
lab.test = gmmpred(X, cl3)
lab.pred = cl3$cluster
## EMBEDDING WITH PCA
X2d    = Rdimtools::do.pca(X, ndim=2)$Y
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(X2d, col=lab.pred, pch=19, main="original results")
plot(X2d, col=lab.test, pch=19, main="newly predicted label")
par(opar)
# -------------------------------------------------------------
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
## LEARN WITH TESTING DATA FOR K=3
cl3 = gmm(X, k=3)
## PREDICT LABEL FOR THE SAME DATA
lab.test = gmmpred(X, cl3)
lab.pred = cl3$cluster
## EMBEDDING WITH PCA
X2d    = Rdimtools::do.pca(X, ndim=2)$Y
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(X2d, col=lab.pred, pch=19, main="original results")
plot(X2d, col=lab.test, pch=19, main="newly predicted label")
par(opar)
# -------------------------------------------------------------
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
## LEARN WITH TESTING DATA FOR K=3
cl3 = gmm(X, k=3)
## PREDICT LABEL FOR THE SAME DATA
lab.test = gmmpred(X, cl3)
lab.pred = cl3$cluster
## EMBEDDING WITH PCA
X2d    = Rdimtools::do.pca(X, ndim=2)$Y
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(X2d, col=lab.pred, pch=19, main="original results")
plot(X2d, col=lab.test, pch=19, main="newly predicted label")
par(opar)
# -------------------------------------------------------------
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
## LEARN WITH TESTING DATA FOR K=3
cl3 = gmm(X, k=3)
## PREDICT LABEL FOR THE SAME DATA
lab.test = gmmpred(X, cl3)
lab.pred = cl3$cluster
## EMBEDDING WITH PCA
X2d    = Rdimtools::do.pca(X, ndim=2)$Y
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(X2d, col=lab.pred, pch=19, main="original results")
plot(X2d, col=lab.test, pch=19, main="newly predicted label")
par(opar)
library(T4cluster)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
## PREPARE
data(iris)
X   = as.matrix(iris[,1:4])
lab = as.integer(as.factor(iris[,5]))
## EMBEDDING WITH PCA
X2d = Rdimtools::do.pca(X, ndim=2)$Y
## CLUSTERING WITH DIFFERENT K VALUES
cl2 = gmm16G(X, k=2)$cluster
cl3 = gmm16G(X, k=3)$cluster
cl4 = gmm16G(X, k=4)$cluster
## VISUALIZATION
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,4), pty="s")
plot(X2d, col=lab, pch=19, main="true label")
plot(X2d, col=cl2, pch=19, main="gmm16G: k=2")
plot(X2d, col=cl3, pch=19, main="gmm16G: k=3")
plot(X2d, col=cl4, pch=19, main="gmm16G: k=4")
par(opar)
pkgdown::build_site()
library(T4cluster)
